{"version":3,"sources":["components/Button/Button.js","assets/logo.png","assets/bell.png","components/Header/Header.js","components/Card/Card.js","data/data.js","assets/ankha.png","assets/aurora.png","assets/beau.png","assets/celeste.png","assets/coco.png","assets/fauna.png","assets/jack.png","assets/jingle.png","assets/kk.png","assets/merengue.png","assets/molly.png","assets/pascal.png","components/GameBoard/GameBoard.js","App.js","reportWebVitals.js","index.js"],"names":["Button","React","forwardRef","props","ref","useState","size","variant","className","onClick","handleChange","children","Header","src","logo","alt","aria-label","aria-labelledby","this","newGame","bells","Component","Card","cardDataset","cardBackAlt","cardBackgroundImg","data-name","style","backgroundImage","villagers","name","img","GameBoard","resetGuesses","firstGuess","secondGuess","count","document","querySelectorAll","forEach","card","classList","remove","matchCheck","add","scoreKeeper","score","querySelector","totalScore","textContent","cardSelect","event","clicked","target","contains","previousTarget","parentNode","dataset","setTimeout","delay","key","state","concat","sort","Math","random","Fragment","map","villager","uuidv4","App","allVillagers","role","allMatched","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","body","insertAdjacentHTML"],"mappings":"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","file":"static/js/main.d47d553b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Button = React.forwardRef((props, ref) => {\n  const [size] = useState(props.size);\n  const [variant] = useState(props.variant);\n\n  return (\n    <button\n      ref={ref}\n      className={`btn btn--${variant} btn--${size}`}\n      onClick={props.handleChange}\n    >\n      {props.children}\n    </button>\n  );\n});\n\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/logo.9d53a758.png\";","export default __webpack_public_path__ + \"static/media/bell.cd61e65b.png\";","import React from \"react\";\nimport Button from \"../Button/Button\";\nimport logo from \"../../assets/logo.png\";\nimport bells from \"../../assets/bell.png\";\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <header className=\"game__header\">\n        <div className=\"game__logo\">\n          <img src={logo} alt=\"Animal Crossing New Horizons Logo\" />\n        </div>\n        <div className=\"game__score-wrap\">\n          <div className=\"game__btn\">\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              aria-label=\"New Game\"\n              aria-labelledby=\"new-game\"\n              handleChange={this.props.newGame}\n            >\n              New Game\n            </Button>\n          </div>\n          <div className=\"game__score\">\n            <img src={bells} alt=\"Animal Crossing Bell Bag\" />\n            <span className=\"score\">0</span>\n            <span className=\"game__score--text\">Bells</span>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n","import React, { useState } from \"react\";\n\nconst Card = React.forwardRef((props, ref) => {\n  const [cardDataset] = useState(props.cardDataset);\n  const [cardBackAlt] = useState(props.cardBackAlt);\n  const [cardBackgroundImg] = useState(props.cardBackgroundImg);\n\n  return (\n    <div className=\"game__card\" data-name={`${cardDataset}`}>\n      <div className=\"game__card--front\" alt=\"Animal Crossing DIY Card\"></div>\n      <div\n        className=\"game__card--back\"\n        style={{ backgroundImage: `url(${cardBackgroundImg})` }}\n        alt={`${cardBackAlt}`}\n      ></div>\n    </div>\n  );\n});\n\nexport default Card;\n","import ankha from \"../assets/ankha.png\";\nimport aurora from \"../assets/aurora.png\";\nimport beau from \"../assets/beau.png\";\nimport celeste from \"../assets/celeste.png\";\nimport coco from \"../assets/coco.png\";\nimport fauna from \"../assets/fauna.png\";\nimport jack from \"../assets/jack.png\";\nimport jingle from \"../assets/jingle.png\";\nimport kk from \"../assets/kk.png\";\nimport merengue from \"../assets/merengue.png\";\nimport molly from \"../assets/molly.png\";\nimport pascal from \"../assets/pascal.png\";\n\nconst villagers = [\n  {\n    name: \"ankha\",\n    img: ankha,\n    alt: \"Animal Crossing Ankha\",\n  },\n  {\n    name: \"aurora\",\n    img: aurora,\n    alt: \"Animal Crossing Aurora\",\n  },\n  { name: \"beau\", img: beau, alt: \"Animal Crossing Beau\" },\n  {\n    name: \"celeste\",\n    img: celeste,\n    alt: \"Animal Crossing Celeste\",\n  },\n  { name: \"coco\", img: coco, alt: \"Animal Crossing Coco\" },\n  { name: \"fauna\", img: fauna, alt: \"Animal Crossing Fauna\" },\n  { name: \"jack\", img: jack, alt: \"Animal Crossing Jack\" },\n  { name: \"jingle\", img: jingle, alt: \"Animal Crossing Jingle\" },\n  { name: \"kk\", img: kk, alt: \"Animal Crossing K.K. Slider\" },\n  {\n    name: \"merengue\",\n    img: merengue,\n    alt: \"Animal Crossing Merengue\",\n  },\n  { name: \"molly\", img: molly, alt: \"Animal Crossing Molly\" },\n  { name: \"pascal\", img: pascal, alt: \"Animal Crossing Pascal\" },\n];\n\nexport default villagers;\n","export default __webpack_public_path__ + \"static/media/ankha.9468d899.png\";","export default __webpack_public_path__ + \"static/media/aurora.50c678c3.png\";","export default __webpack_public_path__ + \"static/media/beau.533dd84b.png\";","export default __webpack_public_path__ + \"static/media/celeste.6849d8ce.png\";","export default __webpack_public_path__ + \"static/media/coco.e10fba2c.png\";","export default __webpack_public_path__ + \"static/media/fauna.abeafacf.png\";","export default __webpack_public_path__ + \"static/media/jack.2af1a8c1.png\";","export default __webpack_public_path__ + \"static/media/jingle.c0fffb9b.png\";","export default __webpack_public_path__ + \"static/media/kk.5649fd3d.png\";","export default __webpack_public_path__ + \"static/media/merengue.9cc2979f.png\";","export default __webpack_public_path__ + \"static/media/molly.31df4904.png\";","export default __webpack_public_path__ + \"static/media/pascal.ad6cc388.png\";","import React from \"react\";\nimport Card from \"../Card/Card\";\nimport villagers from \"../../data/data.js\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class GameBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.count = 0;\n    this.firstGuess = \"\";\n    this.secondGuess = \"\";\n    this.previousTarget = null;\n    this.delay = 1200;\n    this.totalScore = 0;\n    this.key = \"\";\n    this.state = {\n      //duplicate array\n      villagers: villagers.concat(villagers),\n    };\n  }\n\n  //reset guesses and counts to original values and removes styles\n  resetGuesses = () => {\n    this.firstGuess = \"\";\n    this.secondGuess = \"\";\n    this.count = 0;\n\n    const selected = document.querySelectorAll(\".game__card--selected\");\n    selected.forEach((card) => {\n      card.classList.remove(\"game__card--selected\");\n    });\n  };\n\n  //check for matches in selected cards\n  matchCheck = () => {\n    const selected = document.querySelectorAll(\".game__card--selected\");\n\n    selected.forEach((card) => {\n      card.classList.add(\"game__card--match\");\n    });\n  };\n\n  scoreKeeper = () => {\n    const score = document.querySelector(\".score\");\n    this.totalScore++;\n    score.textContent = `${this.totalScore}`;\n  };\n\n  cardSelect = (event) => {\n    //clicked item\n    let clicked = event.target;\n\n    //only select divs, not entire grid\n    if (\n      clicked.classList.contains(\"game__container\") ||\n      clicked === this.previousTarget ||\n      clicked.parentNode.classList.contains(\"game__card--selected\") ||\n      clicked.parentNode.classList.contains(\"game__card--match\")\n    ) {\n      return;\n    }\n\n    //add selected class\n    if (this.count < 2) {\n      this.count++;\n      if (this.count === 1) {\n        //assign first guess\n        this.firstGuess = clicked.parentNode.dataset.name;\n        clicked.parentNode.classList.add(\"game__card--selected\");\n      } else {\n        //assign second guess\n        this.secondGuess = clicked.parentNode.dataset.name;\n        clicked.parentNode.classList.add(\"game__card--selected\");\n      }\n\n      //check if guess variables are empty\n      if (this.firstGuess !== \"\" && this.secondGuess !== \"\") {\n        if (this.firstGuess === this.secondGuess) {\n          setTimeout(this.matchCheck, this.delay);\n          setTimeout(this.resetGuesses, this.delay);\n          this.scoreKeeper();\n        } else {\n          setTimeout(this.resetGuesses, this.delay);\n        }\n      }\n      this.previousTarget = clicked;\n    }\n  };\n\n  render() {\n    const { villagers } = this.state;\n\n    //shuffle cards\n    villagers.sort(() => 0.5 - Math.random());\n\n    return (\n      <React.Fragment>\n        <div className=\"game__container\" onClick={this.cardSelect}>\n          {villagers.map((villager) => (\n            <Card\n              key={uuidv4()}\n              cardDataset={villager.name}\n              cardBackAlt={villager.alt}\n              cardBackgroundImg={villager.img}\n            />\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import \"./App.scss\";\nimport React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport GameBoard from \"./components/GameBoard/GameBoard\";\nimport villagers from \"./data/data.js\";\n\nconst App = () => {\n  const allVillagers = villagers.concat(villagers);\n\n  const newGame = () => {\n    const allMatched = document.querySelectorAll(\".game__card--match\");\n    const totalScore = 0;\n    const score = document.querySelector(\".score\");\n    score.textContent = `${totalScore}`;\n\n    allMatched.forEach((card) => {\n      card.classList.remove(\"game__card--match\");\n    });\n\n    allVillagers.sort(() => 0.5 - Math.random());\n  };\n\n  return (\n    <main className=\"game game__wrap\" role=\"main\">\n      <div className=\"container\">\n        <Header newGame={newGame} />\n        <GameBoard />\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst bgString = '<div class=\"aurora\"></div><div class=\"stars\"></div>';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n  document.body.insertAdjacentHTML(\"beforeend\", bgString)\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}